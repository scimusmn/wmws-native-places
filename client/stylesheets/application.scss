@import "base/extends";
@import "base/animations";
@import "base/forms";
@import "base/fonts";
@import "base/glow";

@import "module/Loading";
@import "module/Login";
@import "module/PageHeader";
@import "module/Signup";

@import "state/Navbar";

body {
  width: 1920px;
  height: 1080px;
  overflow: hidden;
  background-color: #000;
  background-image: url('/images/background.png');
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Chrome/Safari/Opera */
  -khtml-user-select: none; /* Konqueror */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */
  user-select: none; /* Non-prefixed version, currently not supported by any browser */
  font-family: 'museo700', sans-serif;

  /* Hide cursor */
  cursor: none;

}

img {
  -webkit-user-drag: none;
  -khtml-user-drag: none;
  -moz-user-drag: none;
  -o-user-drag: none;
  user-drag: none;
}

.noselect {
}

.ExhibitComponents,
.ViewExhibitComponent,
.EditExhibitComponent,
.Videos,
.NewVideo {
  background-color: #FFF;
  padding: 0 40px 40px 40px;

  /* Hide cursor */
  /*cursor: default !important;*/

}

/**
 * Selection screen - English and Spanish colors
 */
.en{
  color: #dfdfdd;
}

.es{
  color: #f26322;
}

/**
 * Selection screen - Top level headline
 */
h1 {
  text-align: center;
}

h1 div.en {
  margin-top: 102px;
}

h1 div.en,
h1 div.es {
  line-height: 70px;
  font-size: 65px;
}

h1 div.es {
  font-size: 58px;
}

/**
 * Selection screen - Video button questions
 */
.video-button h2 {
  position: absolute;
  bottom: 3px;
  left: 0px;
  margin-bottom: 0px;
  z-index: 2;
}

h2 div.en,
h2 div.es {
  color: rgba(255,255,255,0.85);

  margin: 0px;
  line-height: 33px;
  font-size: 34px;
  margin: 0 0 0 0;
  padding: 4px;
  padding-left: 74px;
  line-height: 29px;
  font-size: 18px;
  letter-spacing: 0.025em;

  background: rgba(0,0,0,0.99);
  background: linear-gradient(to right, rgba(0,0,0,0.99) 0%, rgba(0,0,0,0.77) 22%, rgba(0,0,0,0.0) 25%);

  font-family: 'Verdana' !important;
  width: 480px;

  text-shadow:1px 1px red,-1px -1px green, -1px 1px gray, 1px -1px blue;

  /*display: none;*/
}

h2 div.es {
  display: none;
}

/**
 * MN Map
 */
.state-outline {
  position: absolute;
  top: 50px;
  left: -100px;
  width: 720px;
  z-index: 9;
  transition: all 0.75s ease-in-out;
}
.state-outline.home {

  top: 700px;
  width: 220px;
  transition: all 0.6s ease-in-out;
}

$featured-fill: rgba(255,255,0,0.7);

.state-outline {
  .cls-1 {
    fill:rgba(125,125,125,0.0);
    stroke:rgba(245,245,245,0.35);
    stroke-miterlimit:10;
    stroke-width:12px;
    transition: all 0.6s ease-in-out;
  }
  .cls-1.featured {
    stroke:$featured-fill;
  }
  .cls-2 {
    fill: rgba(255,255,255,0.6);
    transform-origin: 50% 50%;
    transform: scale(1,1);
    transition: all 0.5s ease-out;
  }
  .cls-2.featured {
    fill: $featured-fill;
    stroke-width:6px;
    stroke:$featured-fill;
    transform:scale(3.14,3.14);
  }
}

.featured-label {
  position: absolute;
  top: 500px;
  left: 100px;
  color: $featured-fill;
}

.state-outline.home  {
  .cls-1{
    stroke:rgba(245,245,245,0.7);
    stroke-width:20px;
  }
}

#selection-screen {
  height: 1080px;
  background-color: #444;

  background-image: url('/images/pattern-tooth.png');
  background-repeat: repeat-x;
  background-position: bottom;

}

/**
 * Selection screen - Button positions
 */

#selection-screen .video-button {

/* Trick - Forces hardware acceleration */
-webkit-transform: translateZ(0);
 -moz-transform: translateZ(0);
 -ms-transform: translateZ(0);
 -o-transform: translateZ(0);
 transform: translateZ(0);
 -webkit-backface-visibility: hidden;
 -moz-backface-visibility: hidden;
 -ms-backface-visibility: hidden;
 backface-visibility: hidden;
 -webkit-perspective: 1000;
 -moz-perspective: 1000;
 -ms-perspective: 1000;
 perspective: 1000;
 -webkit-transform: translate3d(0, 0, 0);
 -moz-transform: translate3d(0, 0, 0);
 -ms-transform: translate3d(0, 0, 0);
 transform: translate3d(0, 0, 0);

  background-color: none;
  z-index: 1;
  position: absolute;
  top: 0px;
  left: 0px;
  width: 480px;
  height: 270px;
  transform-origin: 0% 0%;

}

#selection-screen .video-button:active {

  transform-origin: 50% 50%;
  transform: scale(0.99);

}

#selection-screen .video-button.active {
  transform-origin: 0% 0%;
}

#selection-screen .video-button.disabled {
  opacity: 0.175;
  visibility: hidden;
  pointer-events: none;
}

#selection-screen .instruction-card {
  width: 100%;
  height: 100%;
  text-align: center;
  background-color: rgba(0,0,0,0.95);
  transition: opacity 0.7s 0.1s ease-out;
  opacity: 0.0;
  position: absolute;
  color: white;

}

#selection-screen .instruction-card.active {
  transition: opacity 0.8s 3.0s ease-out;
  opacity: 1.0;
}

.instruction-card .h-break {
  padding-top: 13px;
}

#selection-screen .instruction-card h3 {
  font-size: 2.2em;
  padding: 22px 0px 0px 0px;
  margin-left: 50px;
  margin-right: 50px;
  font-family: 'museo700', sans-serif;
}

#selection-screen .instruction-card h3.sub {
  padding: 5px 0px 0px 0px;
  font-size: 2.0em;
  font-family: 'museo300', sans-serif;
}

#selection-screen .video-button img.dakota {
  width: 480px;
  height: 270px;
  position: absolute;
  transition: opacity 2.5s 9s ease-in;
  opacity: 0.0;
  z-index: 2;
}

#selection-screen .video-button.active img.dakota {
  transition: opacity 0.1s 1.0s ease-in;
  opacity: 1.0;
}

$clip-amount: 60px;
$clip-round: 9px;
$grid-start-left: calc(476px - #{$clip-amount});
$grid-start-top: 0px;
$cell-width: calc(480px - (#{$clip-amount}*2));
$cell-height: 270px;


.video-button,
.video-button video,
.video-button img  {

  transition: clip-path 0.2s ease-in;
  clip-path: inset(3px calc(3px + #{$clip-amount}) 3px calc(3px + #{$clip-amount}) round #{$clip-round} #{$clip-round});

}

/* Featured cell */
.video-button .overlay {
  z-index: 9;
  width: 100%;
  height: 100%;
  position: absolute;
  transition: all 0.2s 0.7s ease-out;
}

.video-button.featured .overlay {

  transition: all 0.1s 0.7s ease-out;
  background-color: rgba(255,255,255,0.1);
/*  outline: 4px solid red;
  outline-offset: -17px;*/
  border-radius: 9px 9px 9px 9px;
  border: 6px solid $featured-fill;

}

.video-button video {

  transition: all 0.5s 0.0s linear;
  transform: scale(1,1);
}

.video-button.featured video {

  transition: all 0.8s 1.0s linear;
  transform: scale(1.1,1.1);

}

.video-button.active,
.video-button.active video,
.video-button.active img  {

  clip-path: inset(0px 0px 0px 0px);

}

/* First column of 4x4 grid. */
#selection-screen .video-01,
#selection-screen .video-05,
#selection-screen .video-09,
#selection-screen .video-013 {
  left: calc((0 * #{$cell-width}) + #{$grid-start-left});
}

/* Second column of 4x4 grid. */
#selection-screen .video-02,
#selection-screen .video-06,
#selection-screen .video-010,
#selection-screen .video-014 {
  left: calc((1 * #{$cell-width}) + #{$grid-start-left});
}

/* Third column of 4x4 grid. */
#selection-screen .video-03,
#selection-screen .video-07,
#selection-screen .video-011,
#selection-screen .video-015 {
  left: calc((2 * #{$cell-width}) + #{$grid-start-left});
}

/* Fourth column of 4x4 grid. */
#selection-screen .video-04,
#selection-screen .video-08,
#selection-screen .video-012,
#selection-screen .video-016 {
  left: calc((3 * #{$cell-width}) + #{$grid-start-left});
}

/* First row of 4x4 grid. */
#selection-screen .video-01,
#selection-screen .video-02,
#selection-screen .video-03,
#selection-screen .video-04 {
  top: calc((0 * #{$cell-height}) + #{$grid-start-top});
}

/* Second row of 4x4 grid. */
#selection-screen .video-05,
#selection-screen .video-06,
#selection-screen .video-07,
#selection-screen .video-08 {
  top: calc((1 * #{$cell-height}) + #{$grid-start-top});
}

/* Third row of 4x4 grid. */
#selection-screen .video-09,
#selection-screen .video-010,
#selection-screen .video-011,
#selection-screen .video-012 {
  top: calc((2 * #{$cell-height}) + #{$grid-start-top});
}

/* Fourth row of 4x4 grid. */
#selection-screen .video-013,
#selection-screen .video-014,
#selection-screen .video-015,
#selection-screen .video-016 {
  top: calc((3 * #{$cell-height}) + #{$grid-start-top});
}

/**
 * Video player
 *
 * Starts out transparent and gets animated in on a play event.
 */
.video-player {
  position: absolute;
  top:0;
  left:0;
  width: 1920px;
  height: 1080px;
  z-index: 3;
  opacity: 1;
}

.video-player.playing {
  opacity: 0.1;
}

.player-fade-enter {
  opacity: 0.01;
}

.player-fade-enter.player-fade-enter-active {
  opacity: 1.0;
  transition: opacity 0.5s 0.25s ease-in;
}

.player-fade-leave {
   opacity: 0.0;
   transition: opacity 0.3s ease-out;
}

.home-button {
  position: absolute;
  bottom: 0;
  left: 0;
  text-align: center;
  margin: 0;
  padding: 42px 85px 42px 41px;

  /* Hide cursor */
  cursor: none;

}

.home-button img {
  width: 60px;
  opacity: 0.75;
  transition: all .1s ease-out;

  /* Hide cursor */
  cursor: none;

}

.home-button:active img {
  transform: scale(0.96);
  opacity: 0.9;

  /* Hide cursor */
  cursor: none;

}

.looping-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 1920px;
  height: 1080px;
  z-index: -1;
}

.screensaver {
  position: absolute;
  top: 0;
  left: 0;
  width: 1920px;
  height: 1080px;
  z-index: 4;
}

/* CRT Scan Lines */
$screen-background:#121010;

#selection-screen .scan-lines {
  background:$screen-background;
  overflow:hidden;
  &::after{
    content:" ";
    display:block;
    position:absolute;
    top:0;
    left:0;
    bottom:0;
    right:0;
    background:transparentize($screen-background,0.9);
    opacity:0;
    z-index:2;
    pointer-events:none;
  }
  &::before{
    content:" ";
    display:block;
    position:absolute;
    top:0;
    left:0;
    bottom:0;
    right:0;
    background:linear-gradient(transparentize($screen-background,1) 50%, transparentize(darken($screen-background,10),0.75) 50%), linear-gradient(90deg,transparentize(#ff0000,0.94),transparentize(#00ff00,0.98),transparentize(#0000ff,0.94));
    z-index:2;
    background-size:100% 2px, 3px 100%;
    pointer-events:none;
  }
}


/* REGULAR SCANLINES SETTINGS */

    // width of 1 scanline (min.: 1px)
    $scan-width: 2px;

    // emulates a damage-your-eyes bad pre-2000 CRT screen ♥ (true, false)
    $scan-crt: false;

    // frames-per-second (should be > 1), only applies if $scan-crt: true;
    $scan-fps: 15;

    // scanline-color (rgba)
    $scan-color: rgba(#000, .12);

    // set z-index on 8, like in ♥ 8-bits ♥, or…
    // set z-index on 2147483648 or more to enable scanlines on Chrome fullscreen (doesn't work in Firefox or IE);
    $scan-z-index: 2147483648;

/* MOVING SCANLINE SETTINGS */

    // moving scanline (true, false)
    $scan-moving-line: true;

    // opacity of the moving scanline
    $scan-opacity: .8;

/* MIXINS */

    // apply CRT animation: @include scan-crt($scan-crt);
    @mixin scan-crt($scan-crt) {
        @if $scan-crt == true {
            animation: scanlines 1s steps($scan-fps) infinite;
        }
        @else { animation: none; }
    }

    // apply CRT animation: @include scan-crt($scan-crt);
    @mixin scan-moving($scan-moving-line) {
        @if $scan-moving-line == true {
            animation: scanline 5s linear infinite;
        }
        @else { animation: none; }
    }

/* CSS .scanlines CLASS */

    .scanlines {
        position: relative;
        overflow: hidden; // only to animate the unique scanline

        &:before,
        &:after {
            display: block;
            pointer-events: none;
            content: '';
            position: absolute;
        }

        // unique scanline travelling on the screen
        &:before {
            // position: absolute;
            // bottom: 100%;
            width: 100%;
            height: $scan-width * 1;
            z-index: $scan-z-index + 1;
            background: $scan-color;
            opacity: $scan-opacity;
            // animation: scanline 6s linear infinite;
            @include scan-moving($scan-moving-line);
        }

        // the scanlines, so!
        &:after {
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            z-index: $scan-z-index;
            background: linear-gradient(
                to bottom,
                transparent 50%,
                $scan-color 51%
            );
            background-size: 100% $scan-width*2;
            @include scan-crt($scan-crt);
        }
    }

/* ANIMATE UNIQUE SCANLINE */
    @keyframes scanline {
        0% {
            transform: translate3d(0,200000%,0);
            // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
        }
    }

    @keyframes scanlines {
        0% {
            background-position: 0 50%;
            // bottom: 0%; // to have a continuous scanline move, use this line (here in 0% step) instead of transform and write, in &:before, { position: absolute; bottom: 100%; }
        }
    }

